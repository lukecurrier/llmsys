{
    "Prompt": "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"",
    "Completions": [
        "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return largest_prime_factor(n // 2)\n    if n % 3 == 0:\n        return largest_prime_factor(n // 3)\n    if n % 5 == 0:\n        return largest_prime_factor(n // 5)\n    if n % 7 == 0:\n        return largest_prime_factor(n // 7)\n    if n % 11 == 0:\n        return largest_prime_factor(n // 11)\n    if n % 13 == 0:\n        return largest_prime_factor(n // 13)\n    if n % 17 == 0:\n        return largest_prime_factor(n // 17)\n    if n % 19 == 0:\n        return largest_prime_factor(n // 19)\n    if n % 23 == 0:\n        return largest_prime_factor(n // 23)\n    if n % 29 == 0:\n        return largest_prime_factor(n // 29)\n    if n % 31 == 0:\n        return largest_prime_factor(n // 31)\n    if n % 37 == 0:\n        return largest_prime_factor(n // ",
        "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n < 2:\n        return 0\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return ",
        "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n % 2 == 0:\n        return largest_prime_factor(n // 2)\n    if n % 3 == 0:\n        return largest_prime_factor(n // 3)\n    if n % 5 == 0:\n        return largest_prime_factor(n // 5)\n    if n % 7 == 0:\n        return largest_prime_factor(n // 7)\n    if n % 11 == 0:\n        return largest_prime_factor(n // 11)\n    if n % 13 == 0:\n        return largest_prime_factor(n // 13)\n    if n % 17 == 0:\n        return largest_prime_factor(n // 17)\n    if n % 19 == 0:\n        return largest_prime_factor(n // 19)\n    if n % 23 == 0:\n        return largest_prime_factor(n // 23)\n    if n % 29 == 0:\n        return largest_prime_factor(n // 29)\n    if n % 31 == 0:\n        return largest_prime_factor(n // 31)\n    if n % 37 == 0:",
        "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return largest_prime_factor(n // 2)\n    if n % 3 == 0:\n        return largest_prime_factor(n // 3)\n    if n % 5 == 0:\n        return largest_prime_factor(n // 5)\n    if n % 7 == 0:\n        return largest_prime_factor(n // 7)\n    if n % 11 == 0:\n        return largest_prime_factor(n // 11)\n    if n % 13 == 0:\n        return largest_prime_factor(n // 13)\n    if n % 17 == 0:\n        return largest_prime_factor(n // 17)\n    if n % 19 == 0:\n        return largest_prime_factor(n // 19)\n    if n % 23 == 0:\n        return largest_prime_factor(n // 23)\n    if n % 29 == 0:\n        return largest_prime_factor(n // 29)\n    return n\n\n",
        "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 0\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == ",
        "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == ",
        "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == ",
        "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return largest_prime_factor(n // 2)\n    if n % 3 == 0:\n        return largest_prime_factor(n // 3)\n    if n % 5 == 0:\n        return largest_prime_factor(n // 5)\n    if n % 7 == 0:\n        return largest_prime_factor(n // 7)\n    if n % 11 == 0:\n        return largest_prime_factor(n // 11)\n    if n % 13 == 0:\n        return largest_prime_factor(n // 13)\n    if n % 17 == 0:\n        return largest_prime_factor(n // 17)\n    if n % 19 == 0:\n        return largest_prime_factor(n // 19)\n    if n % 23 == 0:\n        return largest_prime_factor(n // 23)\n    if n % 29 == 0:\n        return largest_prime_factor(n // 29)\n    if n % 31 == 0:\n        return largest_prime_factor(n // 31)\n    if n % 37 == 0:\n        return largest_prime_factor(n // ",
        "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == ",
        "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == ",
        "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == ",
        "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return largest_prime_factor(n // 2)\n    if n % 3 == 0:\n        return largest_prime_factor(n // 3)\n    if n % 5 == 0:\n        return largest_prime_factor(n // 5)\n    if n % 7 == 0:\n        return largest_prime_factor(n // 7)\n    if n % 11 == 0:\n        return largest_prime_factor(n // 11)\n    if n % 13 == 0:\n        return largest_prime_factor(n // 13)\n    if n % 17 == 0:\n        return largest_prime_factor(n // 17)\n    if n % 19 == 0:\n        return largest_prime_factor(n // 19)\n    if n % 23 == 0:\n        return largest_prime_factor(n // 23)\n    if n % 29 == 0:\n        return largest_prime_factor(n // 29)\n    if n % 31 == 0:\n        return largest_prime_factor(n // 31)\n    if n % 37 == 0:\n        return largest_prime_factor(n // ",
        "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return largest_prime_factor(n // 2)\n    if n % 3 == 0:\n        return largest_prime_factor(n // 3)\n    if n % 5 == 0:\n        return largest_prime_factor(n // 5)\n    if n % 7 == 0:\n        return largest_prime_factor(n // 7)\n    if n % 11 == 0:\n        return largest_prime_factor(n // 11)\n    if n % 13 == 0:\n        return largest_prime_factor(n // 13)\n    if n % 17 == 0:\n        return largest_prime_factor(n // 17)\n    if n % 19 == 0:\n        return largest_prime_factor(n // 19)\n    if n % 23 == 0:\n        return largest_prime_factor(n // 23)\n    if n % 29 == 0:\n        return largest_prime_factor(n // 29)\n    if n % 31 == 0:\n        return largest_prime_factor(n // 31)\n    if n % 37 == 0:\n        return largest_prime_factor(n // ",
        "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return largest_prime_factor(n // 2)\n    if n % 3 == 0:\n        return largest_prime_factor(n // 3)\n    if n % 5 == 0:\n        return largest_prime_factor(n // 5)\n    if n % 7 == 0:\n        return largest_prime_factor(n // 7)\n    if n % 11 == 0:\n        return largest_prime_factor(n // 11)\n    if n % 13 == 0:\n        return largest_prime_factor(n // 13)\n    if n % 17 == 0:\n        return largest_prime_factor(n // 17)\n    if n % 19 == 0:\n        return largest_prime_factor(n // 19)\n    if n % 23 == 0:\n        return largest_prime_factor(n // 23)\n    if n % 29 == 0:\n        return largest_prime_factor(n // 29)\n    if n % 31 == 0:\n        return largest_prime_factor(n // 31)\n    if n % 37 == 0:\n        return largest_prime_factor(n // ",
        "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    # TODO: Implement this function\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 2\n    elif n % 2 == 0:\n        return largest_prime_factor(n // 2)\n    elif n % 3 == 0:\n        return largest_prime_factor(n // 3)\n    elif n % 5 == 0:\n        return largest_prime_factor(n // 5)\n    elif n % 7 == 0:\n        return largest_prime_factor(n // 7)\n    elif n % 11 == 0:\n        return largest_prime_factor(n // 11)\n    elif n % 13 == 0:\n        return largest_prime_factor(n // 13)\n    elif n % 17 == 0:\n        return largest_prime_factor(n // 17)\n    elif n % 19 == 0:\n        return largest_prime_factor(n // 19)\n    else:\n        return n\n\n",
        "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return largest_prime_factor(n // 2)\n    if n % 3 == 0:\n        return largest_prime_factor(n // 3)\n    if n % 5 == 0:\n        return largest_prime_factor(n // 5)\n    if n % 7 == 0:\n        return largest_prime_factor(n // 7)\n    if n % 11 == 0:\n        return largest_prime_factor(n // 11)\n    if n % 13 == 0:\n        return largest_prime_factor(n // 13)\n    if n % 17 == 0:\n        return largest_prime_factor(n // 17)\n    if n % 19 == 0:\n        return largest_prime_factor(n // 19)\n    if n % 23 == 0:\n        return largest_prime_factor(n // 23)\n    if n % 29 == 0:\n        return largest_prime_factor(n // 29)\n    if n % 31 == 0:\n        return largest_prime_factor(n // 31)\n    if n % 37 == 0:\n        return largest_prime_factor(n // ",
        "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    for i in range(3, int(n ** 0.5) + 1, 2):\n        if n % i == 0:\n            return i\n    return n\n\n",
        "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    for i in range(3, int(n ** 0.5) + 1, 2):\n        if n % i == 0:\n            return i\n    return n\n\n",
        "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n % 2 == 0:\n        return largest_prime_factor(n // 2)\n    if n % 3 == 0:\n        return largest_prime_factor(n // 3)\n    if n % 5 == 0:\n        return largest_prime_factor(n // 5)\n    if n % 7 == 0:\n        return largest_prime_factor(n // 7)\n    if n % 11 == 0:\n        return largest_prime_factor(n // 11)\n    if n % 13 == 0:\n        return largest_prime_factor(n // 13)\n    if n % 17 == 0:\n        return largest_prime_factor(n // 17)\n    if n % 19 == 0:\n        return largest_prime_factor(n // 19)\n    if n % 23 == 0:\n        return largest_prime_factor(n // 23)\n    if n % 29 == 0:\n        return largest_prime_factor(n // 29)\n    if n % 31 == 0:\n        return largest_prime_factor(n // 31)\n    if n % 37 == 0:",
        "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    for i in range(3, int(n ** 0.5) + 1, 2):\n        if n % i == 0:\n            return i\n    return 1\n\n"
    ],
    "Tests": "def check(candidate):\n    assert candidate(15) == 5\n    assert candidate(27) == 3\n    assert candidate(63) == 7\n    assert candidate(330) == 11\n    assert candidate(13195) == 29\n\ndef test_check():\n    check(largest_prime_factor)\n\ntest_check()\n"
}