{
    "Prompt": "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    >>> get_closest_vowel('yogurt')\n    'u'\n    >>> get_closest_vowel('FULL')\n    'U'\n    >>> get_closest_vowel('quick')\n    ''\n    >>> get_closest_vowel('ab')\n    ''\n    \"\"\"",
    "Completions": [
        "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    >>> get_closest_vowel('yogurt')\n    'u'\n    >>> get_closest_vowel('FULL')\n    'U'\n    >>> get_closest_vowel('quick')\n    ''\n    >>> get_closest_vowel('ab')\n    ''\n    \"\"\"\n    vowels = 'aeiou'\n    vowels_index = [i for i, c in enumerate(vowels) if c == word[i]]\n    if len(vowels_index) == 0:\n        return ''\n    else:\n        return vowels[vowels_index[0]]\n\n",
        "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    >>> get_closest_vowel('yogurt')\n    'u'\n    >>> get_closest_vowel('FULL')\n    'U'\n    >>> get_closest_vowel('quick')\n    ''\n    >>> get_closest_vowel('ab')\n    ''\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    for i in range(len(word)):\n        if word[i] in vowels:\n            return vowels[i]\n    return ''\n",
        "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    >>> get_closest_vowel('yogurt')\n    'u'\n    >>> get_closest_vowel('FULL')\n    'U'\n    >>> get_closest_vowel('quick')\n    ''\n    >>> get_closest_vowel('ab')\n    ''\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    consonants = set(word) - vowels\n    if len(consonants) == 0:\n        return ''\n    vowels_index = vowels.index(word[0])\n    consonants_index = consonants.index(word[-1])\n    if vowels_index == consonants_index:\n        return vowels[consonants_index]\n    else:\n        return vowels[consonants_index]\n",
        "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    >>> get_closest_vowel('yogurt')\n    'u'\n    >>> get_closest_vowel('FULL')\n    'U'\n    >>> get_closest_vowel('quick')\n    ''\n    >>> get_closest_vowel('ab')\n    ''\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels_index = [i for i, x in enumerate(vowels) if x == word[i + 1]]\n    if len(vowels_index) == 0:\n        return ''\n    return vowels[vowels_index[0]]\n\n",
        "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    >>> get_closest_vowel('yogurt')\n    'u'\n    >>> get_closest_vowel('FULL')\n    'U'\n    >>> get_closest_vowel('quick')\n    ''\n    >>> get_closest_vowel('ab')\n    ''\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    for i in range(len(word)):\n        if word[i] in vowels:\n            return vowels[i]\n    return ''\n\n",
        "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    >>> get_closest_vowel('yogurt')\n    'u'\n    >>> get_closest_vowel('FULL')\n    'U'\n    >>> get_closest_vowel('quick')\n    ''\n    >>> get_closest_vowel('ab')\n    ''\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels.remove('y')\n    vowels.remove('z')\n    vowels.remove('x')\n    vowels.remove('w')\n    vowels.remove('v')\n    vowels.remove('b')\n    vowels.remove('d')\n    vowels.remove('g')\n    vowels.remove('h')\n    vowels.remove('j')\n    vowels.remove('k')\n    vowels.remove('l')\n    vowels.remove('m')\n    vowels.remove('n')\n    vowels.remove('o')\n    vowels.remove('p')\n    vowels.remove('q')\n    vowels.remove('r')\n    vowels.remove('s')\n    vowels.remove('t')\n    vowels.remove('v')\n    vowels.remove('w')\n    vowels.remove('x')\n    vowels.remove('y')\n    vowels.remove('z')\n    vowels.remove('a')\n    vowels.remove('e')\n    vowels.remove('i')\n    vowels.remove('o')\n    vowels.remove('u')\n    vowels.remove('a')\n    vowels.remove('e')\n    vowels.remove('i')\n    vowels.remove('o')\n    vowels.remove('u')\n    vowels.remove('a')\n    vowels.remove('e')\n    vowels.remove('i')\n    vowels.remove('o')\n    vowels.remove('u')\n    vowels",
        "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    >>> get_closest_vowel('yogurt')\n    'u'\n    >>> get_closest_vowel('FULL')\n    'U'\n    >>> get_closest_vowel('quick')\n    ''\n    >>> get_closest_vowel('ab')\n    ''\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels.remove('y')\n    vowels.remove('z')\n    vowels.remove('x')\n    vowels.remove('w')\n    vowels.remove('h')\n    vowels.remove('ch')\n    vowels.remove('sh')\n    vowels.remove('ph')\n    vowels.remove('gh')\n    vowels.remove('j')\n    vowels.remove('k')\n    vowels.remove('q')\n    vowels.remove('r')\n    vowels.remove('s')\n    vowels.remove('t')\n    vowels.remove('v')\n    vowels.remove('z')\n    vowels.remove('b')\n    vowels.remove('d')\n    vowels.remove('g')\n    vowels.remove('m')\n    vowels.remove('n')\n    vowels.remove('f')\n    vowels.remove('l')\n    vowels.remove('p')\n    vowels.remove('w')\n    vowels.remove('k')\n    vowels.remove('j')\n    vowels.remove('h')\n    vowels.remove('x')\n    vowels.remove('y')\n    vowels.remove('a')\n    vowels.remove('e')\n    vowels.remove('i')\n    vowels.remove('o')\n    vowels.remove('u')\n    vowels.remove('a')\n    vowels.remove('e')\n    vowels.remove('i')\n    vowels.remove('o')\n    vowels",
        "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    >>> get_closest_vowel('yogurt')\n    'u'\n    >>> get_closest_vowel('FULL')\n    'U'\n    >>> get_closest_vowel('quick')\n    ''\n    >>> get_closest_vowel('ab')\n    ''\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    for i in range(len(word)):\n        if word[i] in vowels:\n            return vowels[i]\n    return ''\n\n",
        "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    >>> get_closest_vowel('yogurt')\n    'u'\n    >>> get_closest_vowel('FULL')\n    'U'\n    >>> get_closest_vowel('quick')\n    ''\n    >>> get_closest_vowel('ab')\n    ''\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    if word == '':\n        return ''\n    if word[0] in vowels:\n        return vowels[0]\n    if word[len(word) - 1] in vowels:\n        return vowels[len(vowels) - 1]\n    return ''\n",
        "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    >>> get_closest_vowel('yogurt')\n    'u'\n    >>> get_closest_vowel('FULL')\n    'U'\n    >>> get_closest_vowel('quick')\n    ''\n    >>> get_closest_vowel('ab')\n    ''\n    \"\"\"\n    vowels = 'aeiou'\n    for i in range(len(word)):\n        if word[i] in vowels:\n            return vowels[i]\n    return ''\n",
        "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    >>> get_closest_vowel('yogurt')\n    'u'\n    >>> get_closest_vowel('FULL')\n    'U'\n    >>> get_closest_vowel('quick')\n    ''\n    >>> get_closest_vowel('ab')\n    ''\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels.remove('y')\n    vowels.remove('z')\n    vowels.remove('x')\n    vowels.remove('w')\n    vowels.remove('x')\n    vowels.remove('y')\n    vowels.remove('z')\n    vowels.remove('w')\n    vowels.remove('x')\n    vowels.remove('y')\n    vowels.remove('z')\n    vowels.remove('w')\n    vowels.remove('x')\n    vowels.remove('y')\n    vowels.remove('z')\n    vowels.remove('w')\n    vowels.remove('x')\n    vowels.remove('y')\n    vowels.remove('z')\n    vowels.remove('w')\n    vowels.remove('x')\n    vowels.remove('y')\n    vowels.remove('z')\n    vowels.remove('w')\n    vowels.remove('x')\n    vowels.remove('y')\n    vowels.remove('z')\n    vowels.remove('w')\n    vowels.remove('x')\n    vowels.remove('y')\n    vowels.remove('z')\n    vowels.remove('w')\n    vowels.remove('x')\n    vowels.remove('y')\n    vowels.remove('z')\n    vowels.remove('w')\n    vowels.remove('x')\n    vowels.remove('y')\n    vowels.remove('z')\n    vowels.remove('w')\n    vowels",
        "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    >>> get_closest_vowel('yogurt')\n    'u'\n    >>> get_closest_vowel('FULL')\n    'U'\n    >>> get_closest_vowel('quick')\n    ''\n    >>> get_closest_vowel('ab')\n    ''\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels_count = 0\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowels_count += 1\n    if vowels_count == 0:\n        return ''\n    vowels_index = vowels.index(word[0])\n    vowels_index_right = vowels.index(word[-1])\n    if vowels_index == vowels_index_right:\n        return vowels[vowels_index]\n    else:\n        return vowels[vowels_index - 1]\n\n",
        "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    >>> get_closest_vowel('yogurt')\n    'u'\n    >>> get_closest_vowel('FULL')\n    'U'\n    >>> get_closest_vowel('quick')\n    ''\n    >>> get_closest_vowel('ab')\n    ''\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    for i in range(len(word)):\n        if word[i] in vowels:\n            return vowels[i]\n    return ''\n",
        "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    >>> get_closest_vowel('yogurt')\n    'u'\n    >>> get_closest_vowel('FULL')\n    'U'\n    >>> get_closest_vowel('quick')\n    ''\n    >>> get_closest_vowel('ab')\n    ''\n    \"\"\"\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    closest_vowel = ''\n    for i in range(len(word)):\n        if word[i] in vowels:\n            closest_vowel = word[i]\n            break\n    for i in range(len(word)):\n        if word[i] in consonants:\n            if closest_vowel in consonants:\n                closest_vowel = closest_vowel + word[i]\n            else:\n                closest_vowel = closest_vowel + word[i]\n    return closest_vowel\n\n",
        "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    >>> get_closest_vowel('yogurt')\n    'u'\n    >>> get_closest_vowel('FULL')\n    'U'\n    >>> get_closest_vowel('quick')\n    ''\n    >>> get_closest_vowel('ab')\n    ''\n    \"\"\"\n    vowels = 'aeiou'\n    vowels_count = 0\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowels_count += 1\n    if vowels_count == 0:\n        return ''\n    if vowels_count == 1:\n        return word[0]\n    if vowels_count == 2:\n        return word[0] + word[1]\n    if vowels_count == 3:\n        return word[0] + word[1] + word[2]\n    if vowels_count == 4:\n        return word[0] + word[1] + word[2] + word[3]\n    if vowels_count == 5:\n        return word[0] + word[1] + word[2] + word[3] + word[4]\n    if vowels_count == 6:\n        return word[0] + word[1] + word[2] + word[3] + word[4] + word[5]\n    if vowels_count == 7:\n        return word[0] + word[1] + word[2] + word[3] + word[4] + word[5] + word[6]\n    if vowels_count == 8:\n        return word[0] + word[1] + word[2] + word[3] + word[4] + word[",
        "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    >>> get_closest_vowel('yogurt')\n    'u'\n    >>> get_closest_vowel('FULL')\n    'U'\n    >>> get_closest_vowel('quick')\n    ''\n    >>> get_closest_vowel('ab')\n    ''\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    for i in range(len(word)):\n        if word[i] in vowels:\n            return vowels[i]\n    return ''\n",
        "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    >>> get_closest_vowel('yogurt')\n    'u'\n    >>> get_closest_vowel('FULL')\n    'U'\n    >>> get_closest_vowel('quick')\n    ''\n    >>> get_closest_vowel('ab')\n    ''\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    return vowels[0] if vowels.index(word[0]) < vowels.index(word[-1]) else vowels[1]\n\n",
        "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    >>> get_closest_vowel('yogurt')\n    'u'\n    >>> get_closest_vowel('FULL')\n    'U'\n    >>> get_closest_vowel('quick')\n    ''\n    >>> get_closest_vowel('ab')\n    ''\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z']\n    for i in range(len(word)):\n        if word[i] in vowels:\n            return vowels[i]\n        elif word[i] in consonants:\n            return word[i]\n    return ''\n",
        "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    >>> get_closest_vowel('yogurt')\n    'u'\n    >>> get_closest_vowel('FULL')\n    'U'\n    >>> get_closest_vowel('quick')\n    ''\n    >>> get_closest_vowel('ab')\n    ''\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    for i in range(len(word)):\n        if word[i] in vowels:\n            return word[i]\n    return ''\n\n",
        "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    >>> get_closest_vowel('yogurt')\n    'u'\n    >>> get_closest_vowel('FULL')\n    'U'\n    >>> get_closest_vowel('quick')\n    ''\n    >>> get_closest_vowel('ab')\n    ''\n    \"\"\"\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    for i in range(len(word)):\n        if word[i] in vowels:\n            return vowels[i]\n        if word[i] in consonants:\n            return word[i]\n    return ''\n"
    ],
    "Tests": "def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
}