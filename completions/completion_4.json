{
    "Prompt": "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text, replace all spaces in it with underscores, \n    and if a string has more than 2 consecutive spaces, \n    then replace all consecutive spaces with - \n    \n    >>> fix_spaces(' Example')\n    'Example'\n    >>> fix_spaces(' Example 1')\n    'Example_1'\n    >>> fix_spaces(' Example 2')\n    '_Example_2'\n    >>> fix_spaces(' Example 3')\n    '_Example-3'\n    \"\"\"",
    "Completions": [
        "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text, replace all spaces in it with underscores, \n    and if a string has more than 2 consecutive spaces, \n    then replace all consecutive spaces with - \n    \n    >>> fix_spaces(' Example')\n    'Example'\n    >>> fix_spaces(' Example 1')\n    'Example_1'\n    >>> fix_spaces(' Example 2')\n    '_Example_2'\n    >>> fix_spaces(' Example 3')\n    '_Example-3'\n    \"\"\"\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')",
        "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text, replace all spaces in it with underscores, \n    and if a string has more than 2 consecutive spaces, \n    then replace all consecutive spaces with - \n    \n    >>> fix_spaces(' Example')\n    'Example'\n    >>> fix_spaces(' Example 1')\n    'Example_1'\n    >>> fix_spaces(' Example 2')\n    '_Example_2'\n    >>> fix_spaces(' Example 3')\n    '_Example-3'\n    \"\"\"\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')",
        "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text, replace all spaces in it with underscores, \n    and if a string has more than 2 consecutive spaces, \n    then replace all consecutive spaces with - \n    \n    >>> fix_spaces(' Example')\n    'Example'\n    >>> fix_spaces(' Example 1')\n    'Example_1'\n    >>> fix_spaces(' Example 2')\n    '_Example_2'\n    >>> fix_spaces(' Example 3')\n    '_Example-3'\n    \"\"\"\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')",
        "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text, replace all spaces in it with underscores, \n    and if a string has more than 2 consecutive spaces, \n    then replace all consecutive spaces with - \n    \n    >>> fix_spaces(' Example')\n    'Example'\n    >>> fix_spaces(' Example 1')\n    'Example_1'\n    >>> fix_spaces(' Example 2')\n    '_Example_2'\n    >>> fix_spaces(' Example 3')\n    '_Example-3'\n    \"\"\"\n    return ' '.join(text.split()) if text.count(' ') > 2 else text\n\n",
        "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text, replace all spaces in it with underscores, \n    and if a string has more than 2 consecutive spaces, \n    then replace all consecutive spaces with - \n    \n    >>> fix_spaces(' Example')\n    'Example'\n    >>> fix_spaces(' Example 1')\n    'Example_1'\n    >>> fix_spaces(' Example 2')\n    '_Example_2'\n    >>> fix_spaces(' Example 3')\n    '_Example-3'\n    \"\"\"\n    return ' '.join([c for c in text.split() if c not in ' \\t\\n\\r'])\n\n",
        "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text, replace all spaces in it with underscores, \n    and if a string has more than 2 consecutive spaces, \n    then replace all consecutive spaces with - \n    \n    >>> fix_spaces(' Example')\n    'Example'\n    >>> fix_spaces(' Example 1')\n    'Example_1'\n    >>> fix_spaces(' Example 2')\n    '_Example_2'\n    >>> fix_spaces(' Example 3')\n    '_Example-3'\n    \"\"\"\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')",
        "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text, replace all spaces in it with underscores, \n    and if a string has more than 2 consecutive spaces, \n    then replace all consecutive spaces with - \n    \n    >>> fix_spaces(' Example')\n    'Example'\n    >>> fix_spaces(' Example 1')\n    'Example_1'\n    >>> fix_spaces(' Example 2')\n    '_Example_2'\n    >>> fix_spaces(' Example 3')\n    '_Example-3'\n    \"\"\"\n    return ' '.join(text.split()) if len(text.split()) > 2 else text\n\n",
        "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text, replace all spaces in it with underscores, \n    and if a string has more than 2 consecutive spaces, \n    then replace all consecutive spaces with - \n    \n    >>> fix_spaces(' Example')\n    'Example'\n    >>> fix_spaces(' Example 1')\n    'Example_1'\n    >>> fix_spaces(' Example 2')\n    '_Example_2'\n    >>> fix_spaces(' Example 3')\n    '_Example-3'\n    \"\"\"\n    return ' '.join(text.split()) if text.count(' ') > 2 else text\n\n",
        "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text, replace all spaces in it with underscores, \n    and if a string has more than 2 consecutive spaces, \n    then replace all consecutive spaces with - \n    \n    >>> fix_spaces(' Example')\n    'Example'\n    >>> fix_spaces(' Example 1')\n    'Example_1'\n    >>> fix_spaces(' Example 2')\n    '_Example_2'\n    >>> fix_spaces(' Example 3')\n    '_Example-3'\n    \"\"\"\n    return ' '.join(text.split()) if text.count(' ') > 2 else text\n\n",
        "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text, replace all spaces in it with underscores, \n    and if a string has more than 2 consecutive spaces, \n    then replace all consecutive spaces with - \n    \n    >>> fix_spaces(' Example')\n    'Example'\n    >>> fix_spaces(' Example 1')\n    'Example_1'\n    >>> fix_spaces(' Example 2')\n    '_Example_2'\n    >>> fix_spaces(' Example 3')\n    '_Example-3'\n    \"\"\"\n    return ' '.join(text.split()) if text.count(' ') > 2 else text\n\n",
        "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text, replace all spaces in it with underscores, \n    and if a string has more than 2 consecutive spaces, \n    then replace all consecutive spaces with - \n    \n    >>> fix_spaces(' Example')\n    'Example'\n    >>> fix_spaces(' Example 1')\n    'Example_1'\n    >>> fix_spaces(' Example 2')\n    '_Example_2'\n    >>> fix_spaces(' Example 3')\n    '_Example-3'\n    \"\"\"\n    return '_'.join(text.split()) if len(text.split()) > 2 else text\n\n",
        "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text, replace all spaces in it with underscores, \n    and if a string has more than 2 consecutive spaces, \n    then replace all consecutive spaces with - \n    \n    >>> fix_spaces(' Example')\n    'Example'\n    >>> fix_spaces(' Example 1')\n    'Example_1'\n    >>> fix_spaces(' Example 2')\n    '_Example_2'\n    >>> fix_spaces(' Example 3')\n    '_Example-3'\n    \"\"\"\n    return ' '.join(text.split()) if text.count(' ') > 2 else text\n\n",
        "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text, replace all spaces in it with underscores, \n    and if a string has more than 2 consecutive spaces, \n    then replace all consecutive spaces with - \n    \n    >>> fix_spaces(' Example')\n    'Example'\n    >>> fix_spaces(' Example 1')\n    'Example_1'\n    >>> fix_spaces(' Example 2')\n    '_Example_2'\n    >>> fix_spaces(' Example 3')\n    '_Example-3'\n    \"\"\"\n    return ' '.join(text.split()) if text.count(' ') > 2 else text\n\n",
        "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text, replace all spaces in it with underscores, \n    and if a string has more than 2 consecutive spaces, \n    then replace all consecutive spaces with - \n    \n    >>> fix_spaces(' Example')\n    'Example'\n    >>> fix_spaces(' Example 1')\n    'Example_1'\n    >>> fix_spaces(' Example 2')\n    '_Example_2'\n    >>> fix_spaces(' Example 3')\n    '_Example-3'\n    \"\"\"\n    return ' '.join(text.split()) if text.count(' ') > 2 else text\n\n",
        "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text, replace all spaces in it with underscores, \n    and if a string has more than 2 consecutive spaces, \n    then replace all consecutive spaces with - \n    \n    >>> fix_spaces(' Example')\n    'Example'\n    >>> fix_spaces(' Example 1')\n    'Example_1'\n    >>> fix_spaces(' Example 2')\n    '_Example_2'\n    >>> fix_spaces(' Example 3')\n    '_Example-3'\n    \"\"\"\n    return ' '.join(text.split()) if len(text.split()) > 2 else text\n\n",
        "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text, replace all spaces in it with underscores, \n    and if a string has more than 2 consecutive spaces, \n    then replace all consecutive spaces with - \n    \n    >>> fix_spaces(' Example')\n    'Example'\n    >>> fix_spaces(' Example 1')\n    'Example_1'\n    >>> fix_spaces(' Example 2')\n    '_Example_2'\n    >>> fix_spaces(' Example 3')\n    '_Example-3'\n    \"\"\"\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '-')\n    return text\n",
        "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text, replace all spaces in it with underscores, \n    and if a string has more than 2 consecutive spaces, \n    then replace all consecutive spaces with - \n    \n    >>> fix_spaces(' Example')\n    'Example'\n    >>> fix_spaces(' Example 1')\n    'Example_1'\n    >>> fix_spaces(' Example 2')\n    '_Example_2'\n    >>> fix_spaces(' Example 3')\n    '_Example-3'\n    \"\"\"\n    return ' '.join(text.split()) if text.count(' ') > 2 else text\n\n",
        "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text, replace all spaces in it with underscores, \n    and if a string has more than 2 consecutive spaces, \n    then replace all consecutive spaces with - \n    \n    >>> fix_spaces(' Example')\n    'Example'\n    >>> fix_spaces(' Example 1')\n    'Example_1'\n    >>> fix_spaces(' Example 2')\n    '_Example_2'\n    >>> fix_spaces(' Example 3')\n    '_Example-3'\n    \"\"\"\n    text = text.replace(' ', '_')\n    text = re.sub(r'\\s+', '_', text)\n    text = re.sub(r'\\s+', '-', text)\n    return text\n",
        "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text, replace all spaces in it with underscores, \n    and if a string has more than 2 consecutive spaces, \n    then replace all consecutive spaces with - \n    \n    >>> fix_spaces(' Example')\n    'Example'\n    >>> fix_spaces(' Example 1')\n    'Example_1'\n    >>> fix_spaces(' Example 2')\n    '_Example_2'\n    >>> fix_spaces(' Example 3')\n    '_Example-3'\n    \"\"\"\n    return ' '.join(text.split()) if text.count(' ') > 2 else text\n\n",
        "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text, replace all spaces in it with underscores, \n    and if a string has more than 2 consecutive spaces, \n    then replace all consecutive spaces with - \n    \n    >>> fix_spaces(' Example')\n    'Example'\n    >>> fix_spaces(' Example 1')\n    'Example_1'\n    >>> fix_spaces(' Example 2')\n    '_Example_2'\n    >>> fix_spaces(' Example 3')\n    '_Example-3'\n    \"\"\"\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')\n    text = text.replace(' ', '_')"
    ],
    "Tests": "def check(candidate):\n    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
}